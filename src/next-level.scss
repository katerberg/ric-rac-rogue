@use 'sass:math';
@import 'colors';
@import 'button';
@import 'action_button';
$stars: 900; // Number of start per layer
$depth: 300; // Depth between star layers
$speed: 60s; // Number of seconds to transition between layers
$width: 6000; // Width of the starfield
$height: 1920; // Height of the starfield
$action-button-transition-duration: 100ms;



#next-level-screen {
    position: absolute;
    width: 100%;
    height: 100%;
    background: radial-gradient(#050526 0%, $color-background 90%) -20vw 10vh no-repeat $color-background;
    z-index: 100;
    display: none;

    &.visible {
        display: block;
    }

    #next-level-content {
        display: flex;
        flex-direction: column;
        align-items: center;
        height: 100%;

        .next-level-message {
            margin-left: auto;
            margin-right: auto;
            text-align: center;
            overflow: auto;
            height: 100%;

            h1 {
                display: inline-block;
                color: $color-next-level-header;
                text-align: center;
                font-size: 80px;
                padding-bottom: 20px;
                position: relative;
                text-transform: uppercase;
                margin-bottom: 60px;

                &::after {
                    content: '';
                    position: absolute;
                    background: $color-next-level-header;
                    width: 100%;
                    top: 100%;
                    left: 0;
                    opacity: 1;
                    transform: perspective(1.5em) rotateX(30deg) scale(1.3, 0.25) translateY(-6em);
                    filter: blur(2em);
                    height: 100%;
                }

                &:hover {
                    &::after {}
                }
            }

            #energy-change {
                --progress: 0%;
                width: 100%;
                height: 50px;

                border: 1px solid #fff;
                padding: 12px 10px;
                box-shadow: 0 0 10px $color-energy;

                .bar {
                    width: var(--progress);
                    height: 100%;
                    background: linear-gradient($color-energy, lighten($color-energy, 10%), $color-energy);
                    background-repeat: repeat;
                    border-radius: 5000px;
                    box-shadow: 0 0 10px 0px $color-energy;
                    transition: width 1s ease 1s;
                }

                @property --progress {
                    syntax: "<length>";
                    initial-value: 0%;
                    inherits: true;
                }
            }

            .energy-counter {
                color: #fff;
                margin-left: 20px;
                margin-top: 20px;
                margin-bottom: 20px;
                vertical-align: middle;

                .new-energy {
                    color: $color-energy;
                    font-size: 24px;
                    text-shadow: 1px 1px 10px $color-energy, 1px 1px 10px $color-energy;
                }
            }

            .power-up-options {
                margin: 20px;
                display: flex;
                margin-bottom: 70px;

                .power-up-option {
                    @include action_button();
                    margin-left: 8px;
                    margin-right: 8px;

                    &::before {
                        opacity: 0.4;
                    }
                }
            }

            .recharge-button {
                @include action_button();
            }
        }

        .next-level-button {
            margin-top: 60px;
            margin-left: auto;
            margin-right: auto;

            @include button($color: $color-action-button, $duration: $action-button-transition-duration);

            &::before {
                opacity: 0.4;
            }
        }
    }

    .stars {
        position: absolute;
        top: 50%;
        left: 50%;
        width: 2px;
        height: 2px;


        $box-shadow: (
        );

    @for $i from 0 through $stars {
        $box-shadow: $box-shadow, (random($width)- math.div($width, 2) + px) (random($height)- math.div($height, 2) + px) hsl(90, 0%, math.percentage(75+random(25)));
    }

    box-shadow: $box-shadow;
    animation: fly $speed linear infinite;
    transform-style: preserve-3d;

    &::before,
    &:after {
        content: "";
        position: absolute;
        width: inherit;
        height: inherit;
        box-shadow: inherit;
    }

    &::before {
        transform: translateZ(-$depth + px);
        animation: fade1 $speed linear infinite;
    }

    &:after {
        transform: translateZ(-$depth * 2 + px);
        animation: fade2 $speed linear infinite;
    }
}

@keyframes fly {
    0% {
        transform: translateX(0px) translateY($depth + px);
    }

    50% {
        transform: translateX($depth + px) translateY(0px);
    }

    100% {
        transform: translateX(0px) translateY($depth + px);
    }
}

@keyframes fade1 {
    from {
        opacity: .5;
    }

    to {
        opacity: 1;
    }
}

@keyframes fade2 {
    from {
        opacity: 0;
    }

    to {
        opacity: .5;
    }
}

}

// Used the following as reference
//Copyright (c) 2024 by Ion Emil Negoita (https://codepen.io/inegoita/pen/wLxObg)
//Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
//The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
//THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.